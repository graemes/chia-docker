#FROM regproxy.graemes.cloud/dockerhub/library/debian:10
FROM regproxy.graemes.cloud/dockerhub/library/ubuntu:latest as builder

ARG BRANCH

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y curl jq python3 ansible tar bash ca-certificates git openssl unzip wget python3-pip sudo acl build-essential python3-dev python3.8-venv python3.8-distutils apt nfs-common python-is-python3 vim

RUN echo "cloning ${BRANCH}"
RUN git clone --branch ${BRANCH} https://github.com/Chia-Network/chia-blockchain.git \
&& cd chia-blockchain \
&& git submodule update --init mozilla-ca \
&& chmod +x install.sh \
&& /usr/bin/sh ./install.sh

WORKDIR /chia-blockchain
RUN . ./activate \
&& pip install --force-reinstall git+https://github.com/ericaltendorf/plotman@devlopment

FROM regproxy.graemes.cloud/dockerhub/library/ubuntu:latest as build-image

EXPOSE 8555
EXPOSE 8444

ENV keys="generate"
ENV harvester="false"
ENV farmer="false"
ENV plots_dir="/plots"
ENV farmer_address="null"
ENV farmer_port="null"
ENV testnet="false"
ENV full_node_port="8444"

#RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y curl jq python3 python3.8-venv python3.8-distutils vim
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y curl jq python3 python3.8-venv python3.8-distutils

COPY --from=builder /chia-blockchain /chia-blockchain

RUN mkdir /plots
RUN mkdir -p /plotter/tmp
RUN mkdir /plotter/tmp2

WORKDIR /chia-blockchain
ADD ./entrypoint.sh entrypoint.sh

#ENTRYPOINT ["bash"]
CMD ["/bin/bash", "-c", "trap : TERM INT; sleep infinity & wait" ]
#
